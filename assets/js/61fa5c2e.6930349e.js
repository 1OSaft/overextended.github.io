"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1058],{9613:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(9496);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(r),h=l,v=u["".concat(c,".").concat(h)]||u[h]||p[h]||a;return r?n.createElement(v,i(i({ref:t},d),{},{components:r})):n.createElement(v,i({ref:t},d))}));function h(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1345:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var n=r(4250),l=(r(9496),r(9613));const a={title:"Server",sidebar_position:1},i=void 0,o={unversionedId:"ox_core/Vehicle/Server/index",id:"ox_core/Vehicle/Server/index",title:"Server",description:"Ox.GetVehicle",source:"@site/docs/ox_core/Vehicle/Server/index.md",sourceDirName:"ox_core/Vehicle/Server",slug:"/ox_core/Vehicle/Server/",permalink:"/docs/ox_core/Vehicle/Server/",draft:!1,editUrl:"https://github.com/overextended/overextended.github.io/tree/main/docs/ox_core/Vehicle/Server/index.md",tags:[],version:"current",lastUpdatedAt:1670731243,formattedLastUpdatedAt:"Dec 11, 2022",sidebarPosition:1,frontMatter:{title:"Server",sidebar_position:1},sidebar:"ox_core",previous:{title:"Methods",permalink:"/docs/ox_core/Player/Server/methods"},next:{title:"Callbacks",permalink:"/docs/ox_core/Vehicle/Server/callbacks"}},c={},s=[{value:"Ox.GetVehicle",id:"oxgetvehicle",level:2},{value:"Ox.GetVehicles",id:"oxgetvehicles",level:2},{value:"Ox.CreateVehicle",id:"oxcreatevehicle",level:2}],d={toc:s};function p(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"oxgetvehicle"},"Ox.GetVehicle"),(0,l.kt)("p",null,"Return an instance of CVehicle for the given entity."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local vehicle = Ox.GetVehicle(entity)\nprint(json.encode(vehicle, { indent = true }))\n")),(0,l.kt)("h2",{id:"oxgetvehicles"},"Ox.GetVehicles"),(0,l.kt)("p",null,"Returns an array containing all vehicles. Methods will not be applied if the first argument is false."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local vehicles = Ox.GetVehicles(usemetatable)\n\nfor i = 1, #vehicles do\n    local vehicle = vehicles[i]\n    print(json.encode(vehicle, { indent = true }))\nend\n")),(0,l.kt)("h2",{id:"oxcreatevehicle"},"Ox.CreateVehicle"),(0,l.kt)("p",null,"Spawns a vehicle and returns the instance of CVehicle.\nIf the first argument is a number, it will attempt to spawn a vehicle from the database with a matching id."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local vehicleId = MySQL.scalar.await('SELECT id FROM vehicles WHERE owner = ? LIMIT 1', { player.charid })\n\nif vehicleId then\n    local coords = player.getCoords()\n    local vehicle = Ox.CreateVehicle(vehicleId, vector3(coords.x, coords.y + 1.0, coords.z) , GetEntityHeading(player.ped))\n\n    if vehicle then\n        print(json.encode(vehicle, { indent = true }))\n    end\nend\n")),(0,l.kt)("p",null,"If the first argument is a table and the owner property is a number, or nil, the vehicle will be added to the database.\nSetting the owner as false creates a non-persistent vehicle."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local vehicle = Ox.CreateVehicle({\n    model = 'sultanrs',\n    owner = player.charid,\n}, player.getCoords(), GetEntityHeading(player.ped))\n")))}p.isMDXComponent=!0}}]);