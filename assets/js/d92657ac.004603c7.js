"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7499],{9613:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var a=r(9496);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=a.createContext({}),u=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=u(r),m=l,y=d["".concat(i,".").concat(m)]||d[m]||c[m]||n;return r?a.createElement(y,o(o({ref:t},s),{},{components:r})):a.createElement(y,o({ref:t},s))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,o=new Array(n);o[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:l,o[1]=p;for(var u=2;u<n;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6489:(e,t,r)=>{r.d(t,{Z:()=>o});var a=r(9496),l=r(5924);const n="tabItem_De_A";function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(n,o),hidden:r},t)}},3408:(e,t,r)=>{r.d(t,{Z:()=>m});var a=r(4250),l=r(9496),n=r(5924),o=r(6704),p=r(8876),i=r(4138),u=r(2509);const s="tabList_V3hT",c="tabItem_B35_";function d(e){var t;const{lazy:r,block:o,defaultValue:d,values:m,groupId:y,className:g}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??v.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),h=(0,p.l)(k,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===d?d:d??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==b&&!k.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:N}=(0,i.U)(),[w,S]=(0,l.useState)(b),C=[],{blockElementScrollPositionUntilNextRender:O}=(0,u.o5)();if(null!=y){const e=f[y];null!=e&&e!==w&&k.some((t=>t.value===e))&&S(e)}const P=e=>{const t=e.currentTarget,r=C.indexOf(t),a=k[r].value;a!==w&&(O(t),S(a),null!=y&&N(y,String(a)))},E=e=>{var t;let r=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;r=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;r=C[t]??C[C.length-1];break}}null==(t=r)||t.focus()};return l.createElement("div",{className:(0,n.Z)("tabs-container",s)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":o},g)},k.map((e=>{let{value:t,label:r,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>C.push(e),onKeyDown:E,onClick:P},o,{className:(0,n.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":w===t})}),r??t)}))),r?(0,l.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return l.createElement(d,(0,a.Z)({key:String(t)},e))}},6365:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>p,toc:()=>u});var a=r(4250),l=(r(9496),r(9613));r(3408),r(6489);const n={title:"Methods"},o=void 0,p={unversionedId:"ox_core/Player/Server/methods",id:"ox_core/Player/Server/methods",title:"Methods",description:"These functions are inherited from the Player class.",source:"@site/docs/ox_core/Player/Server/methods.md",sourceDirName:"ox_core/Player/Server",slug:"/ox_core/Player/Server/methods",permalink:"/docs/ox_core/Player/Server/methods",draft:!1,editUrl:"https://github.com/overextended/overextended.github.io/tree/main/docs/ox_core/Player/Server/methods.md",tags:[],version:"current",lastUpdatedAt:1669510981,formattedLastUpdatedAt:"Nov 27, 2022",frontMatter:{title:"Methods"},sidebar:"ox_core",previous:{title:"Events",permalink:"/docs/ox_core/Player/Server/events"},next:{title:"Server",permalink:"/docs/ox_core/Vehicle/Server/"}},i={},u=[{value:"player.set",id:"playerset",level:2},{value:"player.setdb",id:"playersetdb",level:2},{value:"player.get",id:"playerget",level:2},{value:"player.getState",id:"playergetstate",level:2},{value:"player.getCoords",id:"playergetcoords",level:2},{value:"player.setGroup",id:"playersetgroup",level:2},{value:"player.getGroup",id:"playergetgroup",level:2},{value:"player.getGroup",id:"playergetgroup-1",level:2},{value:"player.hasGroup",id:"playerhasgroup",level:2},{value:"player.getPlayersInScope",id:"playergetplayersinscope",level:2},{value:"player.isPlayerInScope",id:"playerisplayerinscope",level:2},{value:"player.triggerScopedEvent",id:"playertriggerscopedevent",level:2}],s={toc:u};function c(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"These functions are inherited from the ",(0,l.kt)("a",{parentName:"p",href:"../Server/"},"Player class"),"."),(0,l.kt)("h2",{id:"playerset"},"player.set"),(0,l.kt)("p",null,"Update the player's metadata, optionally syncing it with the client."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.set(key, value, replicated)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"key: ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},"value: ",(0,l.kt)("inlineCode",{parentName:"li"},"any")),(0,l.kt)("li",{parentName:"ul"},"replicated?: ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"))),(0,l.kt)("h2",{id:"playersetdb"},"player.setdb"),(0,l.kt)("p",null,"Update the player's metadata and store in the DB, optionally syncing it with the client.",(0,l.kt)("br",{parentName:"p"}),"\n","Note: These values are not synced to the client on login; you will need to use ",(0,l.kt)("inlineCode",{parentName:"p"},"player.set"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.setdb(key, value, replicated)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"key: ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},"value: ",(0,l.kt)("inlineCode",{parentName:"li"},"string | number | table | boolean")),(0,l.kt)("li",{parentName:"ul"},"replicated?: ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"))),(0,l.kt)("h2",{id:"playerget"},"player.get"),(0,l.kt)("p",null,"Get a value from the player's metadata, or omit the argument to get all metadata."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.get(key)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"key?: ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h2",{id:"playergetstate"},"player.getState"),(0,l.kt)("p",null,"Return the player's statebag."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.getState()\n")),(0,l.kt)("h2",{id:"playergetcoords"},"player.getCoords"),(0,l.kt)("p",null,"Return the player's position."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.getCoords()\n")),(0,l.kt)("h2",{id:"playersetgroup"},"player.setGroup"),(0,l.kt)("p",null,"Updates the player's grade for the given group. Any value below 1 will remove the group from the player."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.setGroup(group, grade)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"group: ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},"grade?: ",(0,l.kt)("inlineCode",{parentName:"li"},"number"))),(0,l.kt)("h2",{id:"playergetgroup"},"player.getGroup"),(0,l.kt)("p",null,"Returns the player's current grade for a given group."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.getGroup()\n")),(0,l.kt)("h2",{id:"playergetgroup-1"},"player.getGroup"),(0,l.kt)("p",null,"Returns an object of all groups the player is in, with the current grade as the value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.getGroups()\n")),(0,l.kt)("h2",{id:"playerhasgroup"},"player.hasGroup"),(0,l.kt)("p",null,"Check if the player is a member of a given group, and returns the matching group name and grade.",(0,l.kt)("br",{parentName:"p"}),"\n","The filter can be a string, array, or object where key is the group, and value is the minimum grade."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.hasGroup(filter)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"filter: ",(0,l.kt)("inlineCode",{parentName:"li"},"string | string[] | { [string]: number }"))),(0,l.kt)("h2",{id:"playergetplayersinscope"},"player.getPlayersInScope"),(0,l.kt)("p",null,"Return an array of all player id's inside the player's scope."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.getPlayersInScope()\n")),(0,l.kt)("h2",{id:"playerisplayerinscope"},"player.isPlayerInScope"),(0,l.kt)("p",null,"Check if the given source is inside the player's scope."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.isPlayerInScope(target)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"target: ",(0,l.kt)("inlineCode",{parentName:"li"},"number"))),(0,l.kt)("h2",{id:"playertriggerscopedevent"},"player.triggerScopedEvent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.triggerScopedEvent(eventName, ...)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"eventName: ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},"...?: ",(0,l.kt)("inlineCode",{parentName:"li"},"any[]"))))}c.isMDXComponent=!0}}]);