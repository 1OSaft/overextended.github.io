"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[300],{9613:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return y}});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(r),y=o,f=d["".concat(c,".").concat(y)]||d[y]||p[y]||a;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9966:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var n=r(5443),o=r(3010),a=(r(9496),r(9613)),l=["components"],i={},c=void 0,s={unversionedId:"ox_lib/GetNearbyPlayers/Client",id:"ox_lib/GetNearbyPlayers/Client",title:"Client",description:"lib.getClosestPlayer",source:"@site/docs/ox_lib/GetNearbyPlayers/Client.md",sourceDirName:"ox_lib/GetNearbyPlayers",slug:"/ox_lib/GetNearbyPlayers/Client",permalink:"/docs/ox_lib/GetNearbyPlayers/Client",draft:!1,editUrl:"https://github.com/overextended/overextended.github.io/tree/main/docs/ox_lib/GetNearbyPlayers/Client.md",tags:[],version:"current",lastUpdatedAt:1659813330,formattedLastUpdatedAt:"8/6/2022",frontMatter:{},sidebar:"ox_lib",previous:{title:"Client",permalink:"/docs/ox_lib/GetClosestPlayer/Client"},next:{title:"Alert Dialog",permalink:"/docs/ox_lib/Interface/Client/alert"}},u={},p=[{value:"lib.getClosestPlayer",id:"libgetclosestplayer",level:3}],d={toc:p};function y(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"libgetclosestplayer"},"lib.getClosestPlayer"),(0,a.kt)("p",null,"Get the id, ped, and coords of the closest player to a set of coordinates."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"---@param coords vector3 The coords to check from.\n---@param maxDistance number The max distance to check.\n---@param includePlayer boolean Whether or not to include the current player.\n---@return number? playerId\n---@return number? playerPed\n---@return vector3? playerCoords\nfunction lib.getClosestPlayer(coords, maxDistance, includePlayer) end\n")))}y.isMDXComponent=!0}}]);