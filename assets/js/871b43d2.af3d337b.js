"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4772],{9613:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(9496);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),f=a,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||o;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5115:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var n=t(5443),a=t(3010),o=(t(9496),t(9613)),i=["components"],s={},l="Usage",c={unversionedId:"oxmysql/Usage/index",id:"oxmysql/Usage/index",title:"Usage",description:"Placeholders",source:"@site/docs/oxmysql/Usage/index.md",sourceDirName:"oxmysql/Usage",slug:"/oxmysql/Usage/",permalink:"/docs/oxmysql/Usage/",draft:!1,editUrl:"https://github.com/overextended/overextended.github.io/tree/main/docs/oxmysql/Usage/index.md",tags:[],version:"current",lastUpdatedAt:1657171779,formattedLastUpdatedAt:"7/7/2022",frontMatter:{},sidebar:"oxmysql",previous:{title:"Placeholders",permalink:"/docs/oxmysql/Getting Started/placeholders"},next:{title:"Insert",permalink:"/docs/oxmysql/Usage/insert"}},u={},d=[{value:"Placeholders",id:"placeholders",level:2},{value:"Upsert",id:"upsert",level:2}],p={toc:d};function f(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usage"},"Usage"),(0,o.kt)("h2",{id:"placeholders"},"Placeholders"),(0,o.kt)("p",null,"Safely format queries by using placeholders in the query, and sending arguments in an array or object.",(0,o.kt)("br",{parentName:"p"}),"\n","Named placeholders are not recommended, and unsupported when using MySQL.prepare."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"MySQL.query('SELECT * FROM users WHERE identifier = ?', { 'license:abcdefg' })\nMySQL.query('SELECT * FROM users WHERE identifier = :identifier', { identifier = 'license:abcdefg' })\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"exports.oxmysql.query('SELECT * FROM users WHERE identifier = ?', { 'license:abcdefg' });\nexports.oxmysql.query('SELECT * FROM users WHERE identifier = :identifier', { identifier: 'license:abcdefg' });\n")),(0,o.kt)("h2",{id:"upsert"},"Upsert"),(0,o.kt)("p",null,"When uncertain if a row should be inserted into the database, or an existing row should be updated, queries should check for duplicate keys.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"MySQL.prepare('INSERT INTO ox_inventory (owner, name, data) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE data = VALUES(data)', { owner, dbId, inventory })\n")),(0,o.kt)("p",null,"This is preferred over checking the existence of a row, then inserting or updating depending on the result.",(0,o.kt)("br",{parentName:"p"}),"\n","Furthermore, unlike using 'REPLACE INTO', the row is not deleted and re-inserted."))}f.isMDXComponent=!0}}]);