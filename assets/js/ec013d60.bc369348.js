"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3537],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},852:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(5443),o=n(3010),a=(n(9496),n(9613)),i=["components"],l={},c=void 0,s={unversionedId:"ox_inventory/Functions/Client/useItem",id:"ox_inventory/Functions/Client/useItem",title:"useItem",description:"Uses the passed item, then triggers the callback function.",source:"@site/docs/ox_inventory/Functions/Client/useItem.md",sourceDirName:"ox_inventory/Functions/Client",slug:"/ox_inventory/Functions/Client/useItem",permalink:"/docs/ox_inventory/Functions/Client/useItem",draft:!1,editUrl:"https://github.com/overextended/overextended.github.io/tree/main/docs/ox_inventory/Functions/Client/useItem.md",tags:[],version:"current",lastUpdatedAt:1660926804,formattedLastUpdatedAt:"8/19/2022",frontMatter:{},sidebar:"ox_inventory",previous:{title:"setStashTarget",permalink:"/docs/ox_inventory/Functions/Client/setStashTarget"},next:{title:"useSlot",permalink:"/docs/ox_inventory/Functions/Client/useSlot"}},u={},p=[],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Uses the passed item, then triggers the callback function.",(0,a.kt)("br",{parentName:"p"}),"\n","Should be calling during item callbacks to utilise the builtin methods (server checks, progress bar, etc.)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"-- data: table\n-- cb: function (optional)\nexports.ox_inventory:useItem(data, cb)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"exports('bandage', function(data, slot)\n    local playerPed = PlayerPedId()\n    local maxHealth = GetEntityMaxHealth(playerPed)\n    local health = GetEntityHealth(playerPed)\n\n    -- Does the ped need to heal?\n    if health < maxHealth then\n        -- Use the bandage\n        exports.ox_inventory:useItem(data, function(data)\n            -- The item has been used, so trigger the effects\n            if data then\n                SetEntityHealth(playerPed, math.min(maxHealth, math.floor(health + maxHealth / 16)))\n                exports.ox_inventory:notify({text = 'You feel better already'})\n            end\n        end)\n    else\n        -- Don't use the item\n        exports.ox_inventory:notify({type = 'error', text = 'You don\\'t need a bandage right now'})\n    end\nend)\n")))}f.isMDXComponent=!0}}]);